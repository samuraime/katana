# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

executors:
  my-executor:
    docker:
      # specify the version you desire here
      - image: circleci/node:lts

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

jobs:
  test:
    executor: my-executor
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      # - run: yarn test --coverage --coverageReporters=text-lcov | ./node_modules/coveralls/bin/coveralls.js
      - run: yarn coverage:report

  build:
    executor: my-executor

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build Frontend
          command: |
            yarn build
      - run:
          name: Upload CDN
          command: |
            yarn cdn
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: ./
          # Must be relative path from root
          paths:
            - backend
            - frontend/build/index.html

  deploy:
    executor: my-executor

    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./
      - run:
          name: Prepare Production Project
          command: |
            cd backend
            yarn install --production
            cd ..
            tar -cvf dist.tar backend frontend/build/index.html
      - store_artifacts:
          path: dist.tar
          destination: dist
      #- run:
      #    name: Deploy Over SSH
      #    command: |
      #      ssh $SSH_USER@$SSH_HOST "<remote deploy command>"

workflows:
  version: 2
  test_build_approval_deploy:
    jobs:
      # parallel
      - test
      - build
      - hold:
          type: approval
          requires:
            - test
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - hold
          filters:
            branches:
              only: master
